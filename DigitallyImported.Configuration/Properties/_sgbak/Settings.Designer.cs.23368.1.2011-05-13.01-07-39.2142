//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DigitallyImported.Configuration.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    public partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("100, 100")]
        public global::System.Drawing.Point MainFormLocation {
            get {
                return ((global::System.Drawing.Point)(this["MainFormLocation"]));
            }
            set {
                this["MainFormLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("WhiteSmoke")]
        public global::System.Drawing.Color AlternatingChannelBackground {
            get {
                return ((global::System.Drawing.Color)(this["AlternatingChannelBackground"]));
            }
            set {
                this["AlternatingChannelBackground"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Beige")]
        public global::System.Drawing.Color SelectedChannelBackground {
            get {
                return ((global::System.Drawing.Color)(this["SelectedChannelBackground"]));
            }
            set {
                this["SelectedChannelBackground"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("techno")]
        public string SelectedChannelName {
            get {
                return ((string)(this["SelectedChannelName"]));
            }
            set {
                this["SelectedChannelName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point MainFormScrollPosition {
            get {
                return ((global::System.Drawing.Point)(this["MainFormScrollPosition"]));
            }
            set {
                this["MainFormScrollPosition"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("http://di.fm/mp3/progressive.pls")]
        public global::System.Uri SelectedChannelUri {
            get {
                return ((global::System.Uri)(this["SelectedChannelUri"]));
            }
            set {
                this["SelectedChannelUri"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool RememberPreviousChannel {
            get {
                return ((bool)(this["RememberPreviousChannel"]));
            }
            set {
                this["RememberPreviousChannel"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("12/29/2006 05:00:00")]
        public global::System.DateTime RefreshIntervalTEST {
            get {
                return ((global::System.DateTime)(this["RefreshIntervalTEST"]));
            }
            set {
                this["RefreshIntervalTEST"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Ascending")]
        public string ChannelSortOrder {
            get {
                return ((string)(this["ChannelSortOrder"]));
            }
            set {
                this["ChannelSortOrder"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("ChannelName")]
        public string ChannelSortBy {
            get {
                return ((string)(this["ChannelSortBy"]));
            }
            set {
                this["ChannelSortBy"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Default")]
        public string PlayerType {
            get {
                return ((string)(this["PlayerType"]));
            }
            set {
                this["PlayerType"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public double FormOpacityValue {
            get {
                return ((double)(this["FormOpacityValue"]));
            }
            set {
                this["FormOpacityValue"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfString xmlns:xsi=\"http://www.w3." +
            "org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <s" +
            "tring>All</string>\r\n</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection PlaylistTypes {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["PlaylistTypes"]));
            }
            set {
                this["PlaylistTypes"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("iTunes.Application")]
        public string ITunesProgID {
            get {
                return ((string)(this["ITunesProgID"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\Winamp")]
        public string WinampRegistryKey {
            get {
                return ((string)(this["WinampRegistryKey"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("QuickTime.QuickTime")]
        public string QuickTimeProgID {
            get {
                return ((string)(this["QuickTimeProgID"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("MediaPlayer.MediaPlayer")]
        public string WMPProgID {
            get {
                return ((string)(this["WMPProgID"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Regular")]
        public string SubscriptionType {
            get {
                return ((string)(this["SubscriptionType"]));
            }
            set {
                this["SubscriptionType"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Gainsboro")]
        public global::System.Drawing.Color ChannelBackground {
            get {
                return ((global::System.Drawing.Color)(this["ChannelBackground"]));
            }
            set {
                this["ChannelBackground"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Username {
            get {
                return ((string)(this["Username"]));
            }
            set {
                this["Username"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Password {
            get {
                return ((string)(this["Password"]));
            }
            set {
                this["Password"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\Winamp")]
        public string WinampRegistryKeyWoW {
            get {
                return ((string)(this["WinampRegistryKeyWoW"]));
            }
            set {
                this["WinampRegistryKeyWoW"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-90")]
        public int TrackStartTimeOffset {
            get {
                return ((int)(this["TrackStartTimeOffset"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:05:00")]
        public global::System.TimeSpan PlaylistRefreshInterval {
            get {
                return ((global::System.TimeSpan)(this["PlaylistRefreshInterval"]));
            }
            set {
                this["PlaylistRefreshInterval"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfString xmlns:xsi=\"http://www.w3." +
            "org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <s" +
            "tring>Progressive</string>\r\n</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection PlaylistFavorites {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["PlaylistFavorites"]));
            }
            set {
                this["PlaylistFavorites"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("http://www.di.fm/partners/xml/playlists.xml")]
        public string DIPlaylistXml {
            get {
                return ((string)(this["DIPlaylistXml"]));
            }
            set {
                this["DIPlaylistXml"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("ExternalChannels.xml")]
        public string ExternalPlaylistXml {
            get {
                return ((string)(this["ExternalPlaylistXml"]));
            }
            set {
                this["ExternalPlaylistXml"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("http://www.di.fm/partners/xml/dievents.xml")]
        public string DIEventListXml {
            get {
                return ((string)(this["DIEventListXml"]));
            }
            set {
                this["DIEventListXml"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ShowUserToast {
            get {
                return ((bool)(this["ShowUserToast"]));
            }
            set {
                this["ShowUserToast"] = value;
            }
        }
    }
}
